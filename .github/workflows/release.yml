name: Release

on:
  push:
    tags:
      - 'v[0-9]+\.[0-9]+\.[0-9]+'

jobs:
  create-and-publish-release:

    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write

    steps:
      - name: Git configuration
        run: |
          echo "Setting the initial branch name to main"
          git config --global init.defaultBranch main
      - name: Checkout sources
        uses: actions/checkout@v3
        with:
          # checkout the main branch
          ref: 'main'
          fetch-depth: 0

      - name: Cache local Maven repository
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
          settings-path: ${{ github.workspace }} # location for the settings.xml file

      - name: Build and Deploy
        run: |
          REVISION=$(echo ${{ github.ref_name }} | sed -E "s/v(.+)/\1/")
          mvn deploy -B -Drevision=$REVISION -s $GITHUB_WORKSPACE/settings.xml
        env:
          GITHUB_TOKEN: ${{ github.token }}

#      - name: Checkout head of current branch
#        run: |
#          SHA1=$(git rev-parse ${{ github.ref_name }}~0)
#          echo "SHA1 = $SHA1"
#          TMP=$(git branch --contains $SHA1)
#          echo "TMP = $TMP"
#          BRANCH=$(git rev-parse ${{ github.ref_name }}~0 | git branch --contains | tail -n 1)
#          echo "branch to checkout: $BRANCH"
#          git checkout $BRANCH

      - name: Generate a changelog
        uses: orhun/git-cliff-action@v2
        id: git-cliff
        with:
          config: keepachangelog.toml
          args: --tag ${{ github.ref_name }}
        env:
          OUTPUT: CHANGELOG.md

      - name: Print the changelog
        run: cat "${{ steps.git-cliff.outputs.changelog }}"

      - name: Install grip to generate CHANGELOG.html from CHANGELOG.md
        run: |
          echo "grip installation in progress..."
          sudo apt-get update -y
          sudo apt-get install -y grip
          echo "...done"

      - name: Generate a changelog in html format
        id: generate-changelog-html
        run: |
          JIRA_URL="https://overit-spa.atlassian.net/jira/software/c/projects/GC/boards/450?modal=detail\&selectedIssue="
          echo "the CHANGELOG.html file will be updated"
          echo "JIRA url: $JIRA_URL"
          ls -a
#          # from GC-NNN to [GC-NNN](<JIRA link>)
#          sed "s@\(GC-\)\([0-9]*\)@\[\\1\\2\]\($JIRA_URL\\1\\2\)@" ./CHANGELOG.md >./CHANGELOG.tmp
#          mv -f ./CHANGELOG.tmp ./CHANGELOG.md
#          grip ./CHANGELOG.md --export ./CHANGELOG.html
#
#      - name: Print the CHANGELOG.html
#        run: cat "${{ steps.generate-changelog-html.outputs.changelog }}"
#
#      - name: commit Changelog
#        run: |
#          git config user.name github-actions
#          git config user.email github-actions@github.com
#          git add CHANGELOG.md CHANGELOG.html
#          git commit -m "generate changelog for version ${{ github.ref_name }}"
#          git push

#      - name: Push changes
#        uses: ad-m/github-push-action@master
#        with:
#          github_token: ${{ secrets.GITHUB_TOKEN }}
#          branch: ${{ github.ref_name }}
#
#      - name: Create GitHub release
#        uses: docker://antonyurchenko/git-release:latest
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#        with:
#          args: target/*.jar
